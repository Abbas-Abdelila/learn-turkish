{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r\nimport remarkGfm from 'remark-gfm';\r\nimport rehypePrettyCode from 'rehype-pretty-code';\r\nimport rehypeSlug from 'rehype-slug';\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\r\n\r\n\r\nconst Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: `**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      description: 'The title of the post',\r\n      required: true,\r\n    },\r\n    date: {\r\n      type: 'date',\r\n      description: 'The date of the post',\r\n      required: true,\r\n    },\r\n    level:{\r\n        type: 'string',\r\n        description: 'The level of the post',\r\n        required: true,\r\n    }, \r\n    desc: {\r\n        type: 'string',\r\n        description: 'The description of the post',\r\n        required: true,\r\n    },\r\n    image: {\r\n      type: 'string',\r\n      description: 'The image of the post',\r\n      required: true,\r\n    }\r\n  },\r\n  computedFields: {\r\n    url: {\r\n      type: 'string',\r\n      resolve: (doc) => `${doc._raw.sourceFileName.replace(/\\.mdx$/, '')}`,\r\n    },\r\n  },\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: 'Content',\r\n  documentTypes: [Post],\r\n  mdx: {\r\n    remarkPlugins: [remarkGfm],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      [\r\n        rehypePrettyCode,\r\n        {\r\n          theme: 'one-dark-pro',\r\n          onVisitLine(node) {\r\n            // Prevent lines from collapsing in `display: grid` mode, and allow empty\r\n            // lines to be copy/pasted\r\n            if (node.children.length === 0) {\r\n              node.children = [{ type: 'text', value: ' ' }];\r\n            }\r\n          },\r\n          onVisitHighlightedLine(node) {\r\n            node.properties.className.push('line--highlighted');\r\n          },\r\n          onVisitHighlightedWord(node) {\r\n            node.properties.className = ['word--highlighted'];\r\n          },\r\n        },\r\n      ],\r\n      [\r\n        rehypeAutolinkHeadings,\r\n        {\r\n          properties: {\r\n            className: ['anchor'],\r\n          },\r\n        },\r\n      ],\r\n    ],\r\n  },\r\n})\r\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AAGnC,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,GAAG,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE,CAAC;AAAA,IACpE;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,YAAY,MAAM;AAGhB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACpD;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
